What happens when you initialize a repository?
Why do you need to do it?
When you initialize, you get a hidden .git 
directory, and you can now track changes and
make commits.
To initialize, you run the git commit command.

How is the staging area different from the 
working directory and the repository? What value
do you think it offers?
The staging area is files from the working 
directory that you want to add to the repository,
kind of the in between. This allows you to select 
which specific files you would like to add in a commit.

How can you use the staging area to make sure
you have one commit per logical change?
You can verify what will be commited before doing
so.

What are some situations when branches would
be helpful in keeping your history organized?
How would branches help?
In situations where you would like multiple working
versions of an app, such as testing out new features.
Branches would allow you to test out a feature
on one branch, while still maintaining the master
branch for current use.

How do the diagrams help you visualize the branch 
structure?
They demonstrate the non-linear structure, and 
how commits can be lost.

What is the result of merging two branches
together? Why do we represent it in the 
diagram the way we do?

One branch is merged into another, this 
way both changes are kept. 
